# base
seed: 0
deterministic: True
model: gemma2
model_size: 9b     # valid pattern examples: 10b, 1.2b, 2.8, 5 (you can omit b character)

# data config
data_train_type: ['qa']
data_path: ['/llm_data/training_dataset/medical_data']
template_dir: [templates/gemma_templates]   # list(directory) or directory, if null, template will be chosen according to the {data_path}/templates.

# project config
project: outputs/test
name: test

# environment config
device: [0,1,2,3]
bit: 32
quant_config: False    # str, if you set bit as 4 or 8, you have to insert appropriate quantization config, or assertion error will occur. It only activate when you set bit to 4 or 8.
attn_implementation: eager      # [flash_attention_2, sdpa, eager], if null, None default value will be applied.
load_unnecessary_half: False    # recommend to set True if you set bit to 16 (4, 8bit model automatically loads neccesaries to 32bit)
half_inference: False

# FSDP training configs
fsdp_train: True
fsdp_hyperparameters:
    cpu_offload: True
    amp_training: True
    wrap_policy: size_based     # [size_based, transformer_based]
    size_based:
        min_num_params: 1000000     # integer value
    transformer_based:
        fsdp_layer_cls: null    # List of modules to apply FSDP

# data config
max_length: 4096
is_multi_turn: False
add_bos_token_when_response_start: True
add_eos_token_when_response_end: True
data_verbose: True

# tokenizer config (I recommend to double check the tokenizer's special token map)
pad_token_id: null     # [add, null, int] if null, tokenizer pad_token_id will not be overrided
bos_token_id: null    # [add, null, int] if null, tokenizer bos_token_id will not be overrided
eos_token_id: null    # [add, null, int] if null, tokenizer eos_token_id will not be overrided
cls_token_id: null    # [add, null, int] if null, tokenizer cls_token_id will not be overrided
sep_token_id: null    # [add, null, int] if null, tokenizer sep_token_id will not be overrided
unk_token_id: null    # [add, null, int] if null, tokenizer unk_token_id will not be overrided

# training config
batch_size: 1
epochs: 300
warmup_epochs: 0
steps: 125000
warmup_steps: 2000
optimizer_step_criterion: 'step'   # ['epoch', 'step']
lr0: 3e-6
lrf: 0.01      # last_lr = lr0 * lrf
scheduler_type: 'cosine'   # ['linear', 'cosine']
momentum: 0.9
weight_decay: 0.0
warmup_momentum: 0.8
early_stop_criterion: 5
workers: 0
total_cpu_use: 16
amp_training: False
ema_updating: False
train_verbose: True
inference_result_verbose: True
gradient_checkpointing: False    # if True, gradient checkpointing strategy will be used to save GPU memeory consumption.
gradient_accumuate_step: 32
generation_max_time: 180        # Maximum time (seconds) of model's generation function. If null, no time limits. 

# peft
peft_config_path: False     # if False, training without peft

# logging data and metrics
common: ['train_loss', 'validation_loss', 'lr']               # ['train_loss', 'validation_loss', 'lr']
metrics: ['ppl', 'bleu', 'edit_distance', 'rouge', 'meteor']  # ['ppl', 'bleu', 'edit_distance', 'rouge', 'meteor']  # TODO: CIDEr 추가
fast_validation_n: null                                          # [null, 1, 2, ...], Only the number of data of the set value is evaluated per step
fast_validation_step_interval: null                            # [null, 1, 2, ...], if null, all validation steps will be executed
validation_step_interval_prop: 1                          # setting between 0 and 1 values
tensorboard_logging_interval: 1